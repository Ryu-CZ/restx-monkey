name: tests

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["main"]

jobs:
  run-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip and pytest
      - name: Install dependencies
        run: | 
          python -m pip install -Ur requirements-dev.txt
      - name: Test with pytest
        run: | 
          python -m coverage run -m unittest tests/test_*
          python -m coverage xml -o coverage-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test coverage results
        uses: actions/upload-artifact@v3
        with:
          name: unittest-results-${{ matrix.python-version }}
          path: coverage-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}